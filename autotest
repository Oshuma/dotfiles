require 'autotest/redgreen'

FAILURE_IMAGE = '~/Pictures/Icons/autotest/failure.gif'
PENDING_IMAGE = '~/Pictures/Icons/autotest/pending.gif'
SUCCESS_IMAGE = '~/Pictures/Icons/autotest/success.gif'

module Autotest::Growl
  # TODO: Throw most of the arguments into an options hash.
  def self.growl(title, msg, img, pri=0, stick="", host="localhost")
    system "growlnotify -n autotest --image #{img} -p #{pri} -H #{host} -m #{msg.inspect} #{title} #{stick}"
  end

  def self.quicksilver(message)
    %x[osascript -e 'tell application "Quicksilver" to show large type "#{message}"']
  end

  Autotest.add_hook :ran_command do |autotest|
    filtered = autotest.results.grep(/\d+\s.*examples?/)
    output = filtered.empty? ? '' : filtered.last.slice(/(\d+)\s.*examples?,\s(\d+)\s.*failures?(?:,\s(\d+)\s.*pending)?/)
    if output =~ /[1-9]\sfailures?/
      # growl "Test Results", "#{output}", FAILURE_IMAGE
      quicksilver(output)
    elsif output =~ /pending/
      growl "Pending Tests", "#{output}", PENDING_IMAGE
    else
      growl "All Tests Pass", "#{output}", SUCCESS_IMAGE
    end
  end
end

Autotest.add_hook :initialize do |at|
	%w{.svn .hg .git vendor}.each {|exception| at.add_exception(exception)}
end
